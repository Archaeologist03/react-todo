{"version":3,"sources":["store/reducers/app.js","store/actions/actionTypes.js","store/actions/app.js","components/SubmitForm/SubmitForm.js","components/List/List.js","components/DoneList/DoneList.js","App.js","index.js","assets/utils/serverEndpoint.js"],"names":["initialState","text","list","done","reducer","state","arguments","length","undefined","action","type","apiList","payload","todo","apiDone","Object","objectSpread","concat","toConsumableArray","updateInitialState","inputChange","newItem","addToList","newList","filter","item","id","itemToDel","deleteFromList","name","doneItem","newDoneList","addtoDone","deleteFromDone","uuid","require","SubmitForm","props","react_default","a","createElement","className","autoFocus","onChange","onInputChange","value","inputText","onKeyPress","inputEnter","onClick","click","List","listMapped","listArr","map","key","Math","random","e","preventDefault","href","onDeleteFromList","onAddToDone","DoneList","doneListMapped","doneArr","listItem","onDeleteFromDone","App","handlerBtnSubmit","_this","onAddToList","handleInputEnter","this","SubmitForm_SubmitForm","List_List","DoneList_DoneList","React","Component","connect","app","dispatch","fetch","serverEndpoint","baseUrl","then","res","json","console","log","users","target","actions","newTodo","method","headers","Content-Type","body","JSON","stringify","catch","err","newDone","rootReducer","combineReducers","appReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","querySelector","module","exports"],"mappings":"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","file":"static/js/main.cd0fa2fd.chunk.js","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  text: '',\n  list: [],\n  done: [],\n};\n\nconst updateInitialState = (state, action) => {\n  if (action.type === actionTypes.UPDATE_INITIAL_STATE) {\n    let apiList = action.payload.todo;\n    let apiDone = action.payload.done;\n\n    return {\n      ...state,\n      list: [...state.list, ...apiList],\n      done: [...state.done, ...apiDone],\n    };\n  }\n};\n\nconst inputChange = (state, action) => {\n  if (action.type === actionTypes.INPUT_CHANGE) {\n    return {\n      ...state,\n      text: action.text,\n    };\n  }\n};\n\nconst addToList = (state, action) => {\n  return {\n    ...state,\n    list: [...state.list, action.newItem],\n  };\n};\n\nconst deleteFromList = (state, action) => {\n  const newList = state.list.filter(item => item.id !== action.itemToDel);\n  return {\n    ...state,\n    list: newList,\n  };\n};\n\nconst addtoDone = (state, action) => {\n  const newList = state.list.filter(item => item.name !== action.doneItem.name);\n  const newDoneList = [...state.done, action.doneItem];\n  return {\n    ...state,\n    list: newList,\n    done: newDoneList,\n  };\n};\n\nconst deleteFromDone = (state, action) => {\n  const newDoneList = state.done.filter(item => item.id !== action.itemToDel);\n  return {\n    ...state,\n    done: newDoneList,\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.UPDATE_INITIAL_STATE:\n      return updateInitialState(state, action);\n    case actionTypes.INPUT_CHANGE:\n      return inputChange(state, action);\n    case actionTypes.ADD_TO_LIST:\n      return addToList(state, action);\n    case actionTypes.DELETE_FROM_LIST:\n      return deleteFromList(state, action);\n    case actionTypes.ADD_TO_DONE:\n      return addtoDone(state, action);\n    case actionTypes.DELETE_FROM_DONE:\n      return deleteFromDone(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","export const INPUT_CHANGE = 'INPUT_CHANGE';\nexport const ADD_TO_LIST = 'ADD_TO_LIST';\nexport const DELETE_FROM_LIST = 'DELETE_FROM_LIST';\nexport const ADD_TO_DONE = 'ADD_TO_DONE';\nexport const DELETE_FROM_DONE = 'DELETE_FROM_DONE';\n\nexport const UPDATE_INITIAL_STATE = 'UPDATE_INITIAL_STATE';\n","import * as actionTypes from './actionTypes';\n\nimport serverEndpoint from '../../assets/utils/serverEndpoint';\n\nconst uuid = require('uuid');\n\n// Setting initial state with data from server.\n// Called when app mounts.\nexport const updateInitialState = () => {\n  return dispatch => {\n    fetch(serverEndpoint.baseUrl)\n      .then(res => res.json())\n      .then(res => {\n        console.log(res.users[0].todo);\n        dispatch({\n          type: actionTypes.UPDATE_INITIAL_STATE,\n          payload: {\n            todo: res.users[0].todo,\n            done: res.users[0].done,\n          },\n        });\n      });\n  };\n};\n\n// Text for new todo.\nexport const inputChange = text => {\n  return {\n    type: actionTypes.INPUT_CHANGE,\n    text: text.target.value,\n  };\n};\n\n// Add new item to todo/list array.\nexport const addToList = newItem => {\n  // Gets item name, makes obj with id and received item name.\n  const newTodo = { id: uuid(), name: newItem };\n\n  // Send POST req to server with new new item obj.\n  return dispatch => {\n    fetch(`${serverEndpoint.baseUrl}/addtodo`, {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ newTodo }),\n    })\n      .then(res => res.json())\n      // .then(res => console.log(res))\n      .catch(err => console.log(err));\n\n    // Dispatches new item obj to reducer\n    dispatch({\n      type: actionTypes.ADD_TO_LIST,\n      newItem: newTodo,\n    });\n  };\n};\n\n// Add item from todo/list to done list.\nexport const addToDone = doneItem => {\n  //  Gets new(clicked todo item) name and creates obj with it and new id.\n  const newDone = { id: uuid(), name: doneItem };\n\n  // Send POST req to server with new done item obj.\n  return dispatch => {\n    fetch(`${serverEndpoint.baseUrl}/adddone`, {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ newDone }),\n    })\n      .then(res => res.json())\n      .catch(err => console.log(err));\n\n    dispatch({\n      type: actionTypes.ADD_TO_DONE,\n      doneItem: newDone,\n    });\n  };\n};\n\n// Delete item from todo/list.\nexport const deleteFromList = itemToDel => {\n  // Delete req with id (itemToDel) to be deleted from todo list.\n  return dispatch => {\n    fetch(`${serverEndpoint.baseUrl}/deletetodo/${itemToDel}`, {\n      method: 'delete',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ itemToDel }),\n    })\n      .then(res => res.json())\n      // .then(res => console.log(res, 'from todo delete'))\n      .catch(err => console.log(err));\n\n    dispatch({\n      type: actionTypes.DELETE_FROM_LIST,\n      itemToDel: itemToDel,\n    });\n  };\n};\n\n// Delete item from done list.\nexport const deleteFromDone = itemToDel => {\n  // Delete req with id (itemToDel) to be deleted from done list.\n  return dispatch => {\n    fetch(`${serverEndpoint.baseUrl}/deletedone/${itemToDel}`, {\n      method: 'delete',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ itemToDel }),\n    })\n      .then(res => res.json())\n      // .then(res => console.log(res, 'from done delete'))\n      .catch(err => console.log(err));\n\n    dispatch({\n      type: actionTypes.DELETE_FROM_DONE,\n      itemToDel: itemToDel,\n    });\n  };\n};\n","import React from 'react';\n\nfunction SubmitForm(props) {\n\n\n  return (\n    <div className=\"submit\">\n      <input\n        className=\"addItemInput\"\n        type=\"text\"\n        autoFocus={true}\n        onChange={props.onInputChange}\n        value={props.inputText}\n        onKeyPress={props.inputEnter}\n      />\n      <button className=\"submitBtn\" type=\"submit\" onClick={props.click}>\n        <span className=\"addBtnText\">Add</span>\n      </button>\n    </div>\n  );\n}\n\nexport default SubmitForm;\n","import React from 'react';\n\nfunction List(props) {\n  let listMapped = props.listArr.map(item => {\n    return item.name ? (\n      <li className='listItem' key={Math.random()}>\n        <span className='listItemName'>{item.name}</span>\n        <a\n          onClick={e => e.preventDefault()}\n          className='listDeleteLink listsBtns'\n          href='delete'>\n          <span\n            className='listItemDelete'\n            onClick={() => props.onDeleteFromList(item.id)}>\n            Delete\n          </span>\n        </a>\n        <a\n          onClick={e => e.preventDefault()}\n          className='listDoneLink listsBtns'\n          href='done'>\n          <span\n            className='listItemDone'\n            onClick={() => props.onAddToDone(item.name)}>\n            Done\n          </span>\n        </a>\n      </li>\n    ) : null;\n  });\n\n  return <ul>{listMapped}</ul>;\n}\n\nexport default List;\n","import React from 'react';\n\nfunction DoneList(props) {\n  let doneListMapped = props.doneArr.map(listItem => {\n    return listItem.name ? (\n      <li className='listItem' key={Math.random()}>\n        <span className='listItemName'>{listItem.name}</span>\n        <a\n          onClick={e => e.preventDefault()}\n          className='listDeleteLink listsBtns'\n          href='delete'>\n          <span\n            className='listItemDelete'\n            onClick={() => props.onDeleteFromDone(listItem.id)}>\n            Delete\n          </span>\n        </a>\n      </li>\n    ) : null;\n  });\n\n  return <ul>{doneListMapped}</ul>;\n}\n\nexport default DoneList;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport * as actions from './store/actions';\n\nimport SubmitForm from './components/SubmitForm/SubmitForm';\nimport List from './components/List/List';\nimport DoneList from './components/DoneList/DoneList';\n\nclass App extends React.Component {\n  componentDidMount() {\n    // Get state from server\n    this.props.updateInitialState();\n  }\n\n  handlerBtnSubmit = e => {\n    e.preventDefault();\n    // this prevents empty string to go to server, therefore we lose err message, but cut extra complexity on AC and server.\n    if (this.props.text) {\n      this.props.onAddToList(this.props.text);\n    }\n  };\n\n  handleInputEnter = e => {\n    if (e.key === 'Enter') {\n      this.props.onAddToList(this.props.text);\n    }\n  };\n\n  render() {\n    return (\n      <div className='container'>\n        <SubmitForm\n          click={this.handlerBtnSubmit}\n          inputText={this.props.text}\n          onInputChange={this.props.onInputChange}\n          inputEnter={this.handleInputEnter}\n        />\n        <div className='listContainer'>\n          <h3 className='listContainer__header listHeader'>ToDo:</h3>\n          <List\n            onDeleteFromList={this.props.onDeleteFromList}\n            onAddToDone={this.props.onAddToDone}\n            listArr={this.props.list}\n          />\n        </div>\n        <div className='doneListContainer'>\n          <h3 className='DoneListContainer__header listHeader'>Done:</h3>\n          <DoneList\n            doneArr={this.props.done}\n            onDeleteFromDone={this.props.onDeleteFromDone}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    text: state.app.text,\n    list: state.app.list,\n    done: state.app.done,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateInitialState: () => dispatch(actions.updateInitialState()),\n    onInputChange: text => dispatch(actions.inputChange(text)),\n    onAddToList: newItem => dispatch(actions.addToList(newItem)),\n    onDeleteFromList: item => dispatch(actions.deleteFromList(item)),\n    onAddToDone: doneItem => dispatch(actions.addToDone(doneItem)),\n    onDeleteFromDone: item => dispatch(actions.deleteFromDone(item)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport appReducer from './store/reducers/app';\n\nimport App from './App';\nimport './index.css';\n\nconst rootReducer = combineReducers({\n  app: appReducer,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root'),\n);\n","const baseUrl = 'https://react-todo-api-ilija.herokuapp.com';\n\nmodule.exports = {\n  baseUrl,\n};\n"],"sourceRoot":""}